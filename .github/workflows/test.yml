name: ZeroGuess Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run nightly tests at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10.7]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-benchmark pytest-xdist
        
    - name: Install package
      run: |
        # Force the package installation in development mode
        pip install -e .
        # Verify package structure
        python -c "import zeroguess; print(f'ZeroGuess version: {zeroguess.__version__}')"
        python -c "import zeroguess.data; print('zeroguess.data module found')"
        # List the directory structure
        find zeroguess -type d -not -path "*/\.*" | sort
        
    - name: Run tests
      run: |
        # Create visualization output directory
        mkdir -p tests/output/visualizations
        
        # Run the tests
        python -m pytest --cov=zeroguess --cov-report=xml
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: deniz195/zeroguess
        file: ./coverage.xml
        fail_ci_if_error: false
        
    - name: Archive visualization artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-visualizations
        path: tests/output/visualizations/
        retention-days: 7
        if-no-files-found: ignore

  nightly-extended-tests:
    # Only run on scheduled builds
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10.7]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-benchmark pytest-xdist
        
    - name: Install package
      run: |
        # Force the package installation in development mode
        pip install -e .
        # Verify package structure
        python -c "import zeroguess; print(f'ZeroGuess version: {zeroguess.__version__}')"
        python -c "import zeroguess.data; print('zeroguess.data module found')"
        
    - name: Run extended tests
      run: |
        # Create visualization output directory
        mkdir -p tests/output/visualizations
        
        # Run extended tests (more epochs, more samples)
        python -m pytest --cov=zeroguess -xvs
        
    - name: Archive visualization artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nightly-test-visualizations
        path: tests/output/visualizations/
        retention-days: 14
        if-no-files-found: ignore 